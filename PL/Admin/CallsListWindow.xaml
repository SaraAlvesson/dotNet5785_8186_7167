<Window x:Class="PL.Admin.CallsListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Manage Calls" Height="600" Width="900" 
        DataContext="{Binding RelativeSource={RelativeSource Self}}" 
        Loaded="Window_Loaded" Closed="Window_Closed"
        Background="#ADD8E6">
    <Window.Resources>
        <!-- Common Button Style -->
        <Style x:Key="CommonButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#ADD8E6"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="#ADD8E6"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" 
                                CornerRadius="5">
                            <TextBlock Text="{TemplateBinding Content}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontWeight="{TemplateBinding FontWeight}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#ADD8E6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Style -->
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="#ECF0F1"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="BorderBrush" Value="#ADD8E6"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="5,0,10,0"/>
        </Style>

        <!-- TextBlock Style -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>

        <!-- ListView Style -->
        <Style TargetType="ListView">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#ADD8E6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0,10"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="167*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Filter and Sort Panel -->
        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="180,4,180,6">
            <TextBlock Text="Filter By:" />
            <ComboBox 
                Name="filterBy" 
                Width="150" 
                ItemsSource="{Binding CallFieldsSort}" 
                SelectedItem="{Binding SelectedCallType, Mode=TwoWay}" 
                SelectionChanged="FilterByComboBox_SelectionChanged" />

            <TextBlock Text="Sort By:" />
            <ComboBox 
                Name="sortBy" 
                Width="150" 
                ItemsSource="{Binding SortOptionsCall}" 
                SelectedItem="{Binding SelectedSortOption, Mode=TwoWay}" 
                SelectionChanged="SortByComboBox_SelectionChanged" />
        </StackPanel>

        <!-- Calls ListView -->
        <ListView Grid.Row="1" 
                  ItemsSource="{Binding FilteredCalls}" 
                  SelectedItem="{Binding SelectedCall}" 
                  MouseDoubleClick="lsvCallList_MouseDoubleClick" Margin="0,10,55,10">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" Width="30" />
                    <GridViewColumn Header="Call Id" DisplayMemberBinding="{Binding CallId}" Width="40" />
                    <GridViewColumn Header="Call Type" Width="115">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CallType}" Background="{Binding CallType, Converter={StaticResource EnumToColorConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Open Time" DisplayMemberBinding="{Binding OpenTime}" Width="130" />
                    <GridViewColumn Header="Time Until Finish" DisplayMemberBinding="{Binding SumTimeUntilFinish}" Width="125" />
                    <GridViewColumn Header="Last Volunteer Name" DisplayMemberBinding="{Binding LastVolunteerName}" Width="120" />
                    <GridViewColumn Header="Sum Appointment Time" DisplayMemberBinding="{Binding SumAppointmentTime}" Width="130" />
                    <GridViewColumn Header="Total Assignments" DisplayMemberBinding="{Binding SumAssignment}" Width="30" />
                    <GridViewColumn Header="Status" Width="120">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Status}" Background="{Binding Status, Converter={StaticResource EnumToColorConverter}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Delete" 
        Command="{Binding DataContext.DeleteCallCommand, RelativeSource={RelativeSource AncestorType=Window}}"
        CommandParameter="{Binding}" 
        Visibility="{Binding Status, Converter={StaticResource CallStatusToVisibilityConverter}}"
        Background="Red"
        Style="{StaticResource CommonButtonStyle}"/>

                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <!-- Add Button -->
        <!-- Add Button -->
        <Button Grid.Row="2" 
        Content="Add Call" 
        HorizontalAlignment="Left" 
        Width="150"
        Click="ButtonAdd_Click" 
        Margin="355,5,0,0" Height="18" VerticalAlignment="Top">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="#40E0D0"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderBrush" Value="#2DA4A7"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" 
                                CornerRadius="20">
                                    <!-- הפינה מעוגלת, ניתן להתאים את הערך לפי הצורך -->
                                    <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#2DA4A7"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</Window>